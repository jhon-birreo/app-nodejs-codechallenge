# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Transaction {
  id: ID
  externalId: String!
  accountExternalName: String!
  transferTypeName: TransferType!
  amount: Float!
  status: TransferStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum TransferType {
  DEBIT
  CREDIT
  CASH
}

enum TransferStatus {
  PENDING
  APPROVED
  REJECTED
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  findFirstTransaction(where: TransactionWhereInput, take: Int, skip: Int): Transaction!
}

input TransactionWhereInput {
  AND: [TransactionWhereInput!]
  OR: [TransactionWhereInput!]
  NOT: [TransactionWhereInput!]
  id: IntFilter
  externalId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

type Mutation {
  createTransaction(data: TransactionCreateInput): Transaction
}

input TransactionCreateInput {
  externalId: String! = "d4596f89-2af0-4fe5-9781-34b0bffbe682"
  accountExternalName: String!
  transferTypeName: TransferType!
  amount: Float!
  status: TransferStatus! = PENDING
  createdAt: DateTime! = "2024-03-19T01:18:22.394Z"
}